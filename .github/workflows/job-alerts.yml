name: Job Alerts (Hourly Email)

on:
  schedule:
    - cron: "0 * * * *"   # every hour (UTC)
  workflow_dispatch:

permissions:
  contents: read   # no repo writes needed

concurrency:
  group: job-alerts-hourly
  cancel-in-progress: false

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Restore cached seen.json (most recent)
      - name: Restore seen.json cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: seen.json
          key: seen-${{ runner.os }}-${{ github.ref_name }}-bootstrap
          restore-keys: |
            seen-${{ runner.os }}-${{ github.ref_name }}-
            seen-${{ runner.os }}-

      # If cache missed, create an empty seen.json so the script can run
      - name: Ensure seen.json exists
        run: |
          if [ ! -f seen.json ]; then
            echo "[]" > seen.json
          fi
          echo "Initial seen.json:"
          cat seen.json

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run monitor
        run: python monitor.py
        env:
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_PASS: ${{ secrets.GMAIL_PASS }}
          TO_EMAIL:  ${{ secrets.TO_EMAIL }}

      # Save updated seen.json to a NEW cache key (restore picks the latest by prefix)
      - name: Save seen.json cache
        uses: actions/cache/save@v4
        with:
          path: seen.json
          key: seen-${{ runner.os }}-${{ github.ref_name }}-${{ github.run_id }}
